Matrix3 = {};

Matrix3.identity = function () {
  return [
    [1, 0, 0],
    [0, 1, 0],
    [0, 0, 1]
  ];
};

Matrix3.add = function (_m1, _m2) {
};

Matrix3.subtract = function (_m1, _m2) {
};

Matrix3.scale = function (_m, _s) {
};

Matrix3.transpose = function (_m) {
};

Matrix3.multiply = function (_m1, _m2) {
  var a1 = (_m1[0][0] * _m2[0][0]) + (_m1[0][1] * _m2[1][0]) + (_m1[0][2] * _m2[2][0]);
  var a2 = (_m1[0][0] * _m2[0][1]) + (_m1[0][1] * _m2[1][1]) + (_m1[0][2] * _m2[2][1]);
  var a3 = (_m1[0][0] * _m2[0][2]) + (_m1[0][1] * _m2[1][2]) + (_m1[0][2] * _m2[2][2]);
  var b1 = (_m1[1][0] * _m2[0][0]) + (_m1[1][1] * _m2[1][0]) + (_m1[1][2] * _m2[2][0]);
  var b2 = (_m1[1][0] * _m2[0][1]) + (_m1[1][1] * _m2[1][1]) + (_m1[1][2] * _m2[2][1]);
  var b3 = (_m1[1][0] * _m2[0][2]) + (_m1[1][1] * _m2[1][2]) + (_m1[1][2] * _m2[2][2]);
  var c1 = (_m1[2][0] * _m2[0][0]) + (_m1[2][1] * _m2[1][0]) + (_m1[2][2] * _m2[2][0]);
  var c2 = (_m1[2][0] * _m2[0][1]) + (_m1[2][1] * _m2[1][1]) + (_m1[2][2] * _m2[2][1]);
  var c3 = (_m1[2][0] * _m2[0][2]) + (_m1[2][1] * _m2[1][2]) + (_m1[2][2] * _m2[2][2]);

  return [
    [a1, a2, a3],
    [b1, b2, b3],
    [c1, c2, c3]
  ];
};

Matrix3.multiplyByVector3 = function (_m, _v) {
  var x = _m[0][0] * _v.x + _m[0][1] * _v.y + _m[0][2] * _v.z;
  var y = _m[1][0] * _v.x + _m[1][1] * _v.y + _m[1][2] * _v.z;
  var z = _m[2][0] * _v.x + _m[2][1] * _v.y + _m[2][2] * _v.z;

  return {x: x, y: y, z: z};
};
